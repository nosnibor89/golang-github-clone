AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >-
  github-clone


Globals:
  Function:
    Runtime: go1.x
    MemorySize: 128
    Timeout: 100
    Environment:
      Variables:
        GITHUB_TABLE_NAME: !Ref githubCloneTable


Resources:

  #  Handlers Definition
  createRepo:
    Type: AWS::Serverless::Function
    Properties:
      Handler: createrepo
      CodeUri: src/handlers/createrepo
      Description: Creates a Repo
      Policies:
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - DynamoDBCrudPolicy:
            TableName: !Ref githubCloneTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /repos
            Method: POST
  getRepo:
    Type: AWS::Serverless::Function
    Properties:
      Handler: getrepo
      CodeUri: src/handlers/getrepo
      Description: Gets a Repo
      Policies:
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - DynamoDBCrudPolicy:
            TableName: !Ref githubCloneTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /repos/{owner}/{repo}
            Method: GET

  createIssue:
    Type: AWS::Serverless::Function
    Properties:
      Handler: createissue
      CodeUri: src/handlers/createissue
      Description: Creates an Issue for a Repo
      Policies:
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - DynamoDBCrudPolicy:
            TableName: !Ref githubCloneTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /repos/{owner}/{repo}/issues
            Method: POST
  getRepoIssues:
    Type: AWS::Serverless::Function
    Properties:
      Handler: getissues
      CodeUri: src/handlers/getissues
      Description: Get the Issues for a Repo
      Policies:
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - DynamoDBCrudPolicy:
            TableName: !Ref githubCloneTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /repos/{owner}/{repo}/issues
            Method: GET
  getRepoIssue:
    Type: AWS::Serverless::Function
    Properties:
      Handler: getissue
      CodeUri: src/handlers/getissue
      Description: Get the Issues for a Repo
      Policies:
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - DynamoDBCrudPolicy:
            TableName: !Ref githubCloneTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /repos/{owner}/{repo}/issues/{issueNumber}
            Method: GET

  createPullRequest:
    Type: AWS::Serverless::Function
    Properties:
      Handler: createpull
      CodeUri: src/handlers/createpull
      Description: Creates a PR in a repo
      Policies:
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - DynamoDBCrudPolicy:
            TableName: !Ref githubCloneTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /repos/{owner}/{repo}/pull
            Method: POST
  getPullRequest:
    Type: AWS::Serverless::Function
    Properties:
      Handler: getpull
      CodeUri: src/handlers/getpull
      Description: Gets a PR in a repo
      Policies:
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - DynamoDBCrudPolicy:
            TableName: !Ref githubCloneTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /repos/{owner}/{repo}/pull/{prNumber}
            Method: GET
  getRepoPullRequests:
    Type: AWS::Serverless::Function
    Properties:
      Handler: getpulls
      CodeUri: src/handlers/getpulls
      Description: Get PRs in a repo
      Policies:
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - DynamoDBCrudPolicy:
            TableName: !Ref githubCloneTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /repos/{owner}/{repo}/pull
            Method: GET

  #            Table Definition
  githubCloneTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "PK"
          AttributeType: "S"
        - AttributeName: "SK"
          AttributeType: "S"
        - AttributeName: "GSI1PK"
          AttributeType: "S"
        - AttributeName: "GSI1SK"
          AttributeType: "S"
        - AttributeName: "GSI2PK"
          AttributeType: "S"
        - AttributeName: "GSI2SK"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "PK"
          KeyType: "HASH"
        - AttributeName: "SK"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
